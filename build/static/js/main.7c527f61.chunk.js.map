{"version":3,"sources":["services/contacts.js","components/Form.js","components/Notification.js","components/Results.js","components/SearchInput.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","put","id","delete","Form","persons","setPersons","setAlertMsg","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","isError","message","setTimeout","find","name","undefined","window","confirm","contactService","number","map","per","catch","e","Math","random","v","concat","value","onChange","target","type","Notification","color","style","borderRadius","backgroundColor","border","borderColor","base","Results","searchPersonField","i","key","onClick","filter","toLowerCase","includes","result","SearchInput","handleSearch","App","setSearchField","alertMsg","useEffect","propsObj","formProps","searchProps","resultsProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEMA,EAAU,eAeD,EAbQ,WACnB,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAYvC,EAVO,SAACC,GACnB,OAAOL,IAAMM,KAAN,UAAcP,GAAUM,GAAQH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAStD,EAPO,SAACC,GACnB,OAAOL,IAAMO,IAAN,UAAaR,EAAb,YAAwBM,EAAOG,IAAKH,IAMhC,EAJO,SAACG,GACnB,OAAOR,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BS,K,OC6CrBE,EAvDJ,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAAQC,EAA4B,EAA5BA,WAAWC,EAAiB,EAAjBA,YAAiB,EAClBC,mBAAS,IADS,mBACxCC,EADwC,KAChCC,EADgC,OAEdF,mBAAS,IAFK,mBAExCG,EAFwC,KAE9BC,EAF8B,KA2C/C,OACE,6BACE,yCACA,0BAAMC,SAvCgB,SAACC,GAEzB,GADAA,EAAMC,iBACS,KAAZN,GAAgC,KAAdE,EAGnB,OAFAJ,EAAY,CAACS,SAAQ,EAAKC,QAAQ,6BAClCC,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,KAChD,KAGT,IAAMlB,EAASM,EAAQc,MAAK,SAACpB,GAAD,OAAYA,EAAOqB,OAASX,UAC1CY,IAAXtB,EACEuB,OAAOC,QAAP,UAAkBxB,EAAOqB,KAAzB,iEACDI,EAAA,eAAiCzB,EAAjC,CAAwC0B,OAAOd,KAAYf,MAAK,WAC9DU,EAAWD,EAAQqB,KAAI,SAAAC,GAAG,OAAGA,EAAIzB,KAAKH,EAAOG,GAAjB,eAAyByB,EAAzB,CAA6BF,OAAOd,IAAWgB,MAC3EpB,EAAY,CAACS,SAAQ,EAAMC,QAAQ,WAAD,OAAYR,KAC9CS,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,QAExDW,OAAO,SAACC,GACPtB,EAAY,CAACS,SAAQ,EAAKC,QAAQ,GAAD,OAAIY,KACrCX,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,QAI3DO,EAA6B,CAACJ,KAAMX,EAASgB,OAAOd,EAAUT,GAAG4B,KAAKC,SACnEnC,MAAK,SAAAoC,GACJ1B,EAAWD,EAAQ4B,OAAOD,IAC1BzB,EAAY,CAACS,SAAQ,EAAMC,QAAQ,SAAD,OAAUR,KAC5CS,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,QAExDW,OAAM,SAAAC,GACLtB,EAAY,CAACS,SAAQ,EAAKC,QAAQ,GAAD,OAAIY,KACrCX,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,QAG7DP,EAAW,IACXE,EAAa,MAMT,sCAAW,2BAAOsB,MAAOzB,EAAS0B,SA3Cf,SAACrB,GAAD,OAAWJ,EAAWI,EAAMsB,OAAOF,WA4CtD,wCAAa,2BAAOA,MAAOvB,EAAWwB,SA3CjB,SAACrB,GAAD,OAAWF,EAAaE,EAAMsB,OAAOF,WA4C1D,6BAAK,4BAAQG,KAAK,UAAb,WC9BAC,EArBM,SAAC,GAAuB,IAAtBtB,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,QAC3B,QAAaI,IAAVJ,GAAmC,KAAZA,EAAiB,OAAO,KAClD,IAWMsB,EAASvB,EAAW,MAAQ,QAClC,OACE,yBAAKwB,MAbM,SAACD,GACZ,MACE,CACEE,aAAc,GACdC,gBAAiB,UACjBC,OAAQ,YACRC,YAAaL,EACbA,MAAOA,GAMCM,CAAKN,IAChB,2BAAItB,KC2BI6B,EAzCC,SAAC,GAAwD,IAAvDzC,EAAsD,EAAtDA,QAAQC,EAA8C,EAA9CA,WAAWyC,EAAmC,EAAnCA,kBAAkBxC,EAAiB,EAAjBA,YAenD,MAAyB,KAAtBwC,EAEC,6BACG1C,EAAQqB,KAAI,SAAC3B,EAAOiD,GAAR,OACX,uBAAGC,IAAKD,GAAIjD,EAAOqB,KAAnB,IAA0BrB,EAAO0B,OAC/B,4BAAQyB,QAAS,kBAnBT9B,EAmBwBrB,EAAOqB,KAnB1BlB,EAmB+BH,EAAOG,QAlBxDoB,OAAOC,QAAP,yCAAiDH,EAAjD,gBACDI,EAA6BtB,GAAIN,MAAK,WACpCU,EAAWD,EAAQ8C,QAAO,SAACpD,GAAD,OAAYA,EAAOG,KAAOA,MACpDK,EAAY,CAACS,SAAQ,EAAMC,QAAQ,WAAD,OAAYG,KAC9CF,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,QAExDW,OAAM,SAAAC,GACLtB,EAAY,CAACS,SAAQ,EAAKC,QAAQ,GAAD,OAAIY,KACrCX,YAAW,kBAAIX,EAAY,CAACS,SAAQ,EAAMC,QAAQ,OAAK,SAT5C,IAACG,EAAKlB,IAmBb,eAQR,6BACGG,EAAQ8C,QAAQ,SAACpD,GAAD,OACbA,EAAOqB,KAAKgC,cAAcC,SACxBN,EAAkBK,kBAAgB1B,KAChC,SAAC4B,EAAON,GAAR,OACI,uBAAGC,IAAKD,GAAIM,EAAOlC,KAAnB,IAA0BkC,EAAO7B,OAAO,gDC7B7C8B,EANK,SAAC,GAAsC,IAArCR,EAAoC,EAApCA,kBAAkBS,EAAkB,EAAlBA,aACpC,OACE,kDAAuB,2BAAOtB,MAAOa,EAAmBZ,SAAUqB,MC8BzDC,EA3BH,WAAO,IAAD,EACajD,mBAAS,IADtB,mBACTH,EADS,KACDC,EADC,OAE2BE,mBAAS,IAFpC,mBAETuC,EAFS,KAESW,EAFT,OAGgBlD,mBAAS,CAACQ,SAAQ,EAAMC,QAAQ,KAHhD,mBAGT0C,EAHS,KAGCpD,EAHD,KAKhBqD,qBAAU,WAAKpC,IAAgC5B,MAAK,SAAAoC,GAAC,OAAI1B,EAAW0B,QAAM,IAE1E,IAEM6B,EAAW,CACfC,UAAW,CAACzD,UAAQC,aAAWC,eAC/BwD,YAAa,CAAChB,oBAAkBS,aAJb,SAAC1C,GAAD,OAAW4C,EAAe5C,EAAMsB,OAAOF,SAK1D8B,aAAc,CAAC3D,UAAQC,aAAWyC,oBAAkBxC,gBAGtD,OACE,6BACE,yCACA,kBAAC,EAAiBoD,GAClB,kBAAC,EAAgBE,EAASE,aAC1B,kBAAC,EAASF,EAASC,WACnB,uCACA,kBAAC,EAAYD,EAASG,gBCzB5BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7c527f61.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAllContacts = () =>{\n    return axios.get(baseUrl).then(response=>response.data)    \n}\nconst addNewContact = (person) => {\n    return axios.post(`${baseUrl}`,person).then(response => response.data)\n}\nconst updateContact = (person) => {\n    return axios.put(`${baseUrl}/${person.id}`,person)\n}\nconst deleteContact = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAllContacts,addNewContact,updateContact,deleteContact}","import React, { useState, useEffect} from 'react';\nimport contactService from '../services/contacts'\n\n\nconst Form = ({persons,setPersons,setAlertMsg}) => {\n    const [newName,setNewName] = useState('')\n    const [newNumber,setNewNumber] = useState('')\n  \n    const handleChangeName = (event) => setNewName(event.target.value)  \n    const handleChangeNumber = (event) => setNewNumber(event.target.value) \n  \n    const onSubmitPhonebook = (event) =>{\n      event.preventDefault()\n      if(newName === '' || newNumber === ''){ \n        setAlertMsg({isError:true,message:`One or more fields empty`})\n        setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000)\n        return null\n      }\n  \n      const person = persons.find((person) => person.name === newName)\n      if(person !== undefined){ \n        if(window.confirm(`${person.name} is already on the list, replace old number with a new one?`)){\n          contactService.updateContact({...person,number:newNumber}).then(()=>{\n            setPersons(persons.map(per=>(per.id===person.id)?{...per,number:newNumber}:per))        \n            setAlertMsg({isError:false,message:`Updated ${newName}`})\n            setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000)        \n          })\n          .catch( (e) => {\n            setAlertMsg({isError:true,message:`${e}`})\n            setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000) \n          })\n        }      \n      }else{\n        contactService.addNewContact({name: newName, number:newNumber,id:Math.random})\n          .then(v=>{\n            setPersons(persons.concat(v))\n            setAlertMsg({isError:false,message:`Added ${newName}`})\n            setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000)\n          })   \n          .catch(e=>{\n            setAlertMsg({isError:true,message:`${e}`})\n            setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000)\n          })\n      }\n      setNewName('')\n      setNewNumber('')\n    }\n    return (\n      <div>\n        <h3>add a new</h3>\n        <form onSubmit={onSubmitPhonebook}>\n          <div>name: <input value={newName} onChange={handleChangeName} /></div>        \n          <div>number: <input value={newNumber} onChange={handleChangeNumber} /></div>\n          <div><button type=\"submit\">Add</button></div>\n        </form>\n      </div>\n    )\n  }\n\n  export default Form","import React from 'react'\n\nconst Notification = ({isError,message}) => {\n    if(message===undefined || message === '') {return null}\n    const base = (color) => {\n      return(\n        {\n          borderRadius: 10,\n          backgroundColor: \"#b3bab5\",\n          border: \"3px solid\",\n          borderColor: color,\n          color: color\n        }\n      )\n    }\n    const color = (isError) ? \"red\" : \"green\"\n    return(\n      <div style={base(color)}>\n       <p>{message}</p>\n      </div>\n    )\n  }\n\nexport default Notification","import React from 'react'\nimport contactService from '../services/contacts'\n\n\nconst Results = ({persons,setPersons,searchPersonField,setAlertMsg}) => {\n    const onDelete = (name,id) => {\n      if(window.confirm(`Tem certeza que deseja deletar ${name} da lista?`)){\n        contactService.deleteContact(id).then(()=>{\n          setPersons(persons.filter((person) => person.id !== id)) \n          setAlertMsg({isError:false,message:`Deleted ${name}`})\n          setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000)\n        })\n        .catch(e=>{\n          setAlertMsg({isError:true,message:`${e}`})\n          setTimeout(()=>setAlertMsg({isError:false,message:\"\"}),3000)\n        })\n      }\n    }\n  \n    if(searchPersonField === ''){    \n      return(\n        <div>\n          {persons.map((person,i) => (\n            <p key={i}>{person.name} {person.number} \n              <button onClick={() => onDelete(person.name,person.id)}>Delete</button> \n            </p>\n          )\n          )}\n        </div>\n      )\n    }else{\n      return (\n      <div>\n        {persons.filter( (person) => \n            person.name.toLowerCase().includes(\n              searchPersonField.toLowerCase())).map( \n                (result,i) => (\n                    <p key={i}>{result.name} {result.number}<button>Delete</button></p>\n                )\n              )}\n      </div>\n      )\n    }  \n  }\n\nexport default Results","import React from 'react'\n\nconst SearchInput = ({searchPersonField,handleSearch}) => {\n    return ( \n      <div>filter shown with <input value={searchPersonField} onChange={handleSearch} /></div>\n    )\n    }\n\nexport default SearchInput","import React, { useState, useEffect} from 'react';\nimport contactService from './services/contacts'\nimport Form from './components/Form'\nimport Notification from \"./components/Notification\"\nimport Results from \"./components/Results\"\nimport SearchInput from \"./components/SearchInput\"\n\nconst App = () => {\n  const [persons,setPersons] = useState([])  \n  const [searchPersonField,setSearchField] = useState('')\n  const [alertMsg, setAlertMsg] = useState({isError:false,message:\"\"})\n  \n  useEffect(()=>{contactService.getAllContacts().then(v => setPersons(v))}, [])\n   \n  const handleSearch = (event) => setSearchField(event.target.value)   \n  \n  const propsObj = {\n    formProps: {persons,setPersons,setAlertMsg},\n    searchProps: {searchPersonField,handleSearch},\n    resultsProps: {persons,setPersons,searchPersonField,setAlertMsg}\n  }\n  \n  return(\n    <div>\n      <h2>Phonebook</h2>\n      <Notification {...alertMsg} />\n      <SearchInput {...propsObj.searchProps}/>\n      <Form {...propsObj.formProps} />\n      <h2>Numbers</h2>\n      <Results {...propsObj.resultsProps}/> \n    </div>    \n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}